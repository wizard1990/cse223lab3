// Generated by CoffeeScript 1.6.3
(function() {
  var addUser, appendError, countPostLength, follow, hoveringFollow, lclock, listTribs, listUsers, main, me, postDone, postTrib, seenClock, showHome, showUser, showing, signIn, signOut, unfollow, updateFollow, updateFollowing, updateUsers, _postRetrib, _postTrib, _showHome, _showUser, _updateFollow, _updateFollowing;

  me = "";

  showing = "";

  lclock = 0;

  seenClock = function(c) {
    if (c > lclock) {
      lclock = c;
      console.log("lclock=" + lclock);
    }
  };

  listTribs = function(data) {
    var li, ret, retrib, trib, tribs, ul, _i, _len, _ref;
    ret = JSON.parse(data);
    if (ret.Err !== "") {
      appendError(ret.Err);
      return;
    }
    tribs = $("div#tribs");
    tribs.empty();
    if (ret.Tribs === null || ret.Tribs.length === 0) {
      tribs.append("No Tribble.");
      return;
    }
    ul = $("<ul/>");
    ret.Tribs.reverse();
    _ref = ret.Tribs;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      trib = _ref[_i];
      seenClock(trib.Clock);
      li = $("<li/>");
      li.append('<span class="author"><a class="author" href="#">@' + trib.User + '</a></span> ');
      li.append('<span class="time">' + trib.Time + '</span> ');
      li.append($('<span class="trib" />').text(trib.Message));
      li.find("a.author").click(function(ev) {
        var name;
        ev.preventDefault();
        name = $(this).text();
        if (name.length > 0 && name.indexOf('@') === 0) {
          name = name.substring(1);
        }
        return _showUser(name);
      });
      li.append('<a href="#" class="retrib button">Retribble</a>');
      retrib = li.find("a.retrib");
      retrib.hide();
      li.hover((function(ev) {
        if (me !== "") {
          $(this).find("a.retrib").show();
        }
      }), (function(ev) {
        $(this).find("a.retrib").hide();
      }));
      retrib.click((function() {
        var msg, who;
        msg = trib.Message;
        who = trib.User;
        return function(ev) {
          ev.preventDefault();
          return _postRetrib('RT @' + who + ': ' + msg, who);
        };
      })());
      ul.append(li);
    }
    tribs.append(ul);
  };

  showHome = function(ev) {
    ev.preventDefault();
    _showHome();
  };

  _showHome = function() {
    $.ajax({
      url: "api/list-home",
      type: "POST",
      data: me,
      success: listTribs,
      cache: false
    });
    showing = "!home";
    $("div#timeline").show();
    $("div#whom").hide();
    $("a#follow").hide();
    $("div#tribs").empty();
    $("h2#title").html("Home of " + me);
  };

  showUser = function(ev) {
    var name;
    ev.preventDefault();
    name = $(this).text();
    _showUser(name);
  };

  _showUser = function(name) {
    $.ajax({
      url: "api/list-tribs",
      type: "POST",
      data: name,
      success: listTribs,
      cache: false
    });
    showing = name;
    $("h2#title").html(name);
    $("div#tribs").empty();
    $("div#timeline").show();
    $("div#whom").show();
    $("a#follow").show();
    updateFollow();
  };

  updateUsers = function(data) {
    var name, ret, ul, users, _i, _len, _ref;
    ret = JSON.parse(data);
    if (ret.Err !== "") {
      appendError(ret.Err);
      return;
    }
    users = $("#users");
    users.empty();
    if (ret.Users === null || ret.Users.length === 0) {
      users.append("No user.");
      return;
    }
    ul = $("<ul/>");
    _ref = ret.Users;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      name = _ref[_i];
      ul.append('<li><a href="#">' + name + '</a></li>');
    }
    users.append(ul);
    $("#users li").click(showUser);
  };

  addUser = function() {
    var name;
    name = $("form#adduser input#username").val();
    if (name === "") {
      return false;
    }
    $("form#adduser input#username").val("");
    console.log("add user", name);
    $.ajax({
      url: "api/add-user",
      type: "POST",
      data: name,
      success: updateUsers,
      cache: false
    });
    return false;
  };

  listUsers = function() {
    $.ajax({
      url: "api/list-users",
      success: updateUsers,
      cache: false
    });
  };

  appendError = function(e) {
    $("div#errors").show();
    return $("div#errors").append('<div class="error">Error: ' + e + '</div>');
  };

  signIn = function(ev) {
    ev.preventDefault();
    if (showing === "" || showing === "!home") {
      return;
    }
    console.log("sign in as: " + showing);
    me = showing;
    $("div#who").show();
    $("div#who h3").html("Signed in as " + me);
    $("div#compose").show();
    $("div#following").show();
    _showHome();
    updateFollow();
    $("div#followings").empty();
    updateFollowing();
  };

  signOut = function(ev) {
    console.log("sign out");
    ev.preventDefault();
    me = "";
    $("div#who").hide();
    $("div#compose").hide();
    $("div#following").hide();
    $("a#follow").hide();
    if (showing === "!home") {
      $("div#timeline").hide();
    }
  };

  updateFollowing = function() {
    $.ajax({
      url: "api/following",
      type: "POST",
      data: me,
      success: _updateFollowing,
      cache: false
    });
  };

  _updateFollowing = function(data) {
    var div, name, ret, ul, _i, _len, _ref;
    ret = JSON.parse(data);
    if (ret.Err !== "") {
      appendError(ret.Err);
      return;
    }
    div = $("div#followings");
    div.empty();
    if (ret.Users === null || ret.Users.length === 0) {
      div.append("Not following anyone.");
      return;
    }
    ul = $("<ul/>");
    _ref = ret.Users;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      name = _ref[_i];
      ul.append('<li><a href="#">' + name + '</a></li>');
    }
    div.append(ul);
    $("div#followings li").click(showUser);
  };

  hoveringFollow = false;

  _updateFollow = function(data) {
    var but, ret;
    ret = JSON.parse(data);
    if (ret.Err !== "") {
      appendError(ret.Err);
      return;
    }
    but = $("a#follow");
    but.unbind("mouseenter mouseleave");
    but.unbind("click");
    if (ret.V) {
      if (hoveringFollow) {
        but.html("Unfollow");
      } else {
        but.html("Following");
      }
      but.hover((function(ev) {
        $(this).html("Unfollow");
        hoveringFollow = true;
      }), (function(ev) {
        $(this).html("Following");
        hoveringFollow = false;
      }));
      but.click(unfollow);
    } else {
      but.html("Follow");
      but.hover((function(ev) {
        hoveringFollow = true;
      }), (function(ev) {
        hoveringFollow = false;
      }));
      but.click(follow);
    }
    updateFollowing();
  };

  follow = function(ev) {
    ev.preventDefault();
    $.ajax({
      url: "api/follow",
      type: "POST",
      data: JSON.stringify({
        Who: me,
        Whom: showing
      }),
      success: _updateFollow,
      cache: false
    });
  };

  unfollow = function(ev) {
    ev.preventDefault();
    $.ajax({
      url: "api/unfollow",
      type: "POST",
      data: JSON.stringify({
        Who: me,
        Whom: showing
      }),
      success: _updateFollow,
      cache: false
    });
  };

  updateFollow = function() {
    var but;
    if (me === "" || showing === "!home") {
      $("a#follow").hide();
      return;
    }
    if (me === showing) {
      but = $("a#follow");
      but.html("Me");
      but.unbind("mouseenter mouseleave");
      but.unbind("click");
      but.hover((function(ev) {
        hoveringFollow = true;
      }), (function(ev) {
        hoveringFollow = false;
      }));
      but.click((function(ev) {
        return ev.preventDefault();
      }));
      return;
    }
    $("a#follow").html("&nbsp;");
    $.ajax({
      url: "api/is-following",
      type: "POST",
      data: JSON.stringify({
        Who: me,
        Whom: showing
      }),
      success: _updateFollow,
      cache: false
    });
  };

  countPostLength = function() {
    var left, len, text;
    text = $("form#post textarea").val();
    len = text.length;
    left = 140 - len;
    $("span#nchar").text("" + left);
    if (left < 0) {
      $("span#nchar").addClass("ncharover");
    } else {
      $("span#nchar").removeClass("ncharover");
    }
  };

  _postRetrib = function(msg, at) {
    $("form#post textarea").val(msg);
    countPostLength();
    _postTrib();
  };

  postTrib = function(ev) {
    ev.preventDefault();
    _postTrib();
  };

  _postTrib = function() {
    var len, text;
    text = $("form#post textarea").val();
    len = text.length;
    if (len === 0) {
      appendError("empty tweet");
      return;
    }
    if (len > 140) {
      appendError("tweet too long");
      return;
    }
    $("form#post textarea").val("");
    countPostLength();
    $.ajax({
      url: "api/post",
      type: "POST",
      data: JSON.stringify({
        Who: me,
        Message: text,
        Clock: lclock
      }),
      success: postDone,
      cache: false
    });
  };

  postDone = function(data) {
    var ret;
    ret = JSON.parse(data);
    if (ret.Err !== "") {
      appendError(ret.Err);
      return;
    }
    if (showing === "") {
      return;
    } else if (showing === "!home") {
      _showHome();
    } else {
      _showUser(showing);
    }
  };

  main = function() {
    $("form#adduser").submit(addUser);
    $("form#post").submit(postTrib);
    $("div#errors").hide();
    $("div#timeline").hide();
    $("a#signin").click(signIn);
    $("a#home").click(showHome);
    $("a#signout").click(signOut);
    $("form#post textarea").keydown(function() {
      return setTimeout((function() {
        return countPostLength();
      }), 1);
    });
    $("form#post textarea").keypress(function() {
      return setTimeout((function() {
        return countPostLength();
      }), 1);
    });
    $("form#post textarea").keyup(countPostLength);
    $("form#post textarea").change(countPostLength);
    listUsers();
  };

  $(document).ready(main);

}).call(this);
